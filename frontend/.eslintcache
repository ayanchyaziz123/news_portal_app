[{"/home/aziz/Desktop/pppppppp/frontend/src/index.js":"1","/home/aziz/Desktop/pppppppp/frontend/src/store.js":"2","/home/aziz/Desktop/pppppppp/frontend/src/reportWebVitals.js":"3","/home/aziz/Desktop/pppppppp/frontend/src/App.js":"4","/home/aziz/Desktop/pppppppp/frontend/src/components/Footer.js":"5","/home/aziz/Desktop/pppppppp/frontend/src/components/Header.js":"6","/home/aziz/Desktop/pppppppp/frontend/src/screens/HomeScreen.js":"7","/home/aziz/Desktop/pppppppp/frontend/src/screens/UserListScreen.js":"8","/home/aziz/Desktop/pppppppp/frontend/src/screens/UserEditScreen.js":"9","/home/aziz/Desktop/pppppppp/frontend/src/screens/DashboardScreen.js":"10","/home/aziz/Desktop/pppppppp/frontend/src/screens/auth/LoginScreen.js":"11","/home/aziz/Desktop/pppppppp/frontend/src/screens/HomeCategoryScree.js":"12","/home/aziz/Desktop/pppppppp/frontend/src/screens/auth/ResetPassword.js":"13","/home/aziz/Desktop/pppppppp/frontend/src/screens/CategoryScreen.js":"14","/home/aziz/Desktop/pppppppp/frontend/src/screens/auth/ProfileScreen.js":"15","/home/aziz/Desktop/pppppppp/frontend/src/screens/auth/ConfirmPassword.js":"16","/home/aziz/Desktop/pppppppp/frontend/src/screens/auth/RegisterScreen2.js":"17","/home/aziz/Desktop/pppppppp/frontend/src/screens/auth/EmailVerifyScreen.js":"18","/home/aziz/Desktop/pppppppp/frontend/src/components/SearchBox.js":"19","/home/aziz/Desktop/pppppppp/frontend/src/components/Rating.js":"20","/home/aziz/Desktop/pppppppp/frontend/src/components/Loader.js":"21","/home/aziz/Desktop/pppppppp/frontend/src/components/FormContainer.js":"22","/home/aziz/Desktop/pppppppp/frontend/src/components/Message.js":"23","/home/aziz/Desktop/pppppppp/frontend/src/components/Paginate.js":"24","/home/aziz/Desktop/pppppppp/frontend/src/components/TopProducts.js":"25","/home/aziz/Desktop/pppppppp/frontend/src/components/Category.js":"26","/home/aziz/Desktop/pppppppp/frontend/src/actions/userActions.js":"27","/home/aziz/Desktop/pppppppp/frontend/src/actions/productActions.js":"28","/home/aziz/Desktop/pppppppp/frontend/src/actions/orderActions.js":"29","/home/aziz/Desktop/pppppppp/frontend/src/actions/cartActions.js":"30","/home/aziz/Desktop/pppppppp/frontend/src/constants/productConstants.js":"31","/home/aziz/Desktop/pppppppp/frontend/src/constants/orderConstants.js":"32","/home/aziz/Desktop/pppppppp/frontend/src/constants/userConstants.js":"33","/home/aziz/Desktop/pppppppp/frontend/src/admin_components/AdminSideBar.js":"34","/home/aziz/Desktop/pppppppp/frontend/src/constants/cartConstants.js":"35","/home/aziz/Desktop/pppppppp/frontend/src/reducers/userReducers.js":"36","/home/aziz/Desktop/pppppppp/frontend/src/reducers/cartReducers.js":"37","/home/aziz/Desktop/pppppppp/frontend/src/reducers/productReducers.js":"38","/home/aziz/Desktop/pppppppp/frontend/src/reducers/contactReducer.js":"39","/home/aziz/Desktop/pppppppp/frontend/src/reducers/orderReducers.js":"40","/home/aziz/Desktop/pppppppp/frontend/src/constants/contactConstants.js":"41","/home/aziz/Desktop/pppppppp/frontend/src/reducers/articleReducers.js":"42","/home/aziz/Desktop/pppppppp/frontend/src/constants/articleConstants.js":"43","/home/aziz/Desktop/pppppppp/frontend/src/actions/articleAction.js":"44","/home/aziz/Desktop/pppppppp/frontend/src/screens/ArticleEditScreen.js":"45","/home/aziz/Desktop/pppppppp/frontend/src/screens/ArticleListScreen.js":"46","/home/aziz/Desktop/pppppppp/frontend/src/screens/ArticleScreen.js":"47","/home/aziz/Desktop/pppppppp/frontend/src/components/Article.js":"48"},{"size":595,"mtime":1660935716000,"results":"49","hashOfConfig":"50"},{"size":2753,"mtime":1667895362306,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":1660935716000,"results":"52","hashOfConfig":"50"},{"size":2404,"mtime":1667919058664,"results":"53","hashOfConfig":"50"},{"size":1927,"mtime":1663731298898,"results":"54","hashOfConfig":"50"},{"size":6413,"mtime":1663699438573,"results":"55","hashOfConfig":"50"},{"size":1894,"mtime":1667919130204,"results":"56","hashOfConfig":"50"},{"size":3843,"mtime":1660935716000,"results":"57","hashOfConfig":"50"},{"size":7902,"mtime":1660935716000,"results":"58","hashOfConfig":"50"},{"size":2485,"mtime":1660935716000,"results":"59","hashOfConfig":"50"},{"size":3558,"mtime":1660935716000,"results":"60","hashOfConfig":"50"},{"size":6002,"mtime":1660935716000,"results":"61","hashOfConfig":"50"},{"size":2513,"mtime":1660935716000,"results":"62","hashOfConfig":"50"},{"size":9267,"mtime":1660935716000,"results":"63","hashOfConfig":"50"},{"size":9672,"mtime":1660935716000,"results":"64","hashOfConfig":"50"},{"size":3666,"mtime":1660935716000,"results":"65","hashOfConfig":"50"},{"size":6650,"mtime":1660935716000,"results":"66","hashOfConfig":"50"},{"size":1186,"mtime":1660935716000,"results":"67","hashOfConfig":"50"},{"size":1130,"mtime":1660935716000,"results":"68","hashOfConfig":"50"},{"size":1886,"mtime":1660935716000,"results":"69","hashOfConfig":"50"},{"size":412,"mtime":1660935716000,"results":"70","hashOfConfig":"50"},{"size":378,"mtime":1660935716000,"results":"71","hashOfConfig":"50"},{"size":228,"mtime":1660935716000,"results":"72","hashOfConfig":"50"},{"size":867,"mtime":1660935716000,"results":"73","hashOfConfig":"50"},{"size":1297,"mtime":1660935716000,"results":"74","hashOfConfig":"50"},{"size":1577,"mtime":1660935716000,"results":"75","hashOfConfig":"50"},{"size":8516,"mtime":1660935716000,"results":"76","hashOfConfig":"50"},{"size":7417,"mtime":1660935716000,"results":"77","hashOfConfig":"50"},{"size":6217,"mtime":1660939066225,"results":"78","hashOfConfig":"50"},{"size":1447,"mtime":1660935716000,"results":"79","hashOfConfig":"50"},{"size":1868,"mtime":1660935716000,"results":"80","hashOfConfig":"50"},{"size":1240,"mtime":1660935716000,"results":"81","hashOfConfig":"50"},{"size":1756,"mtime":1660935716000,"results":"82","hashOfConfig":"50"},{"size":3053,"mtime":1667907226204,"results":"83","hashOfConfig":"50"},{"size":287,"mtime":1660935716000,"results":"84","hashOfConfig":"50"},{"size":4784,"mtime":1660935716000,"results":"85","hashOfConfig":"50"},{"size":1486,"mtime":1660935716000,"results":"86","hashOfConfig":"50"},{"size":5835,"mtime":1660935716000,"results":"87","hashOfConfig":"50"},{"size":635,"mtime":1660935716000,"results":"88","hashOfConfig":"50"},{"size":4105,"mtime":1660935716000,"results":"89","hashOfConfig":"50"},{"size":362,"mtime":1660935716000,"results":"90","hashOfConfig":"50"},{"size":5835,"mtime":1667904257521,"results":"91","hashOfConfig":"50"},{"size":1868,"mtime":1665124370763,"results":"92","hashOfConfig":"50"},{"size":7448,"mtime":1667919184500,"results":"93","hashOfConfig":"50"},{"size":9338,"mtime":1667918332500,"results":"94","hashOfConfig":"50"},{"size":5305,"mtime":1667907302269,"results":"95","hashOfConfig":"50"},{"size":10453,"mtime":1667918929504,"results":"96","hashOfConfig":"50"},{"size":1321,"mtime":1667919084225,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"m4jzmc",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"100"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"100"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"100"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aziz/Desktop/pppppppp/frontend/src/index.js",[],["219","220"],"/home/aziz/Desktop/pppppppp/frontend/src/store.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/reportWebVitals.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/App.js",["221"],"/home/aziz/Desktop/pppppppp/frontend/src/components/Footer.js",["222"],"import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nfunction Footer() {\n    return (\n        <footer>\n                <Row className=\"bg-dark text-white p-4 mt-5\">\n                    <Col md={4}>\n\n                        <h4 className=\"text-white\">Links</h4>\n                        <Link to=\"/\" className=\"text-white\">About</Link>\n                       \n                        <p>Top product</p>\n\n                    </Col>\n                    <Col md={4}>\n                        <h5 className=\"text-white\">Our Address</h5>\n                        <address>\n                            121, Zindabazar Road<br></br>\n                            Sylhet, Bangladesh<br></br>\n                            \n                            <i class=\"fa fa-phone\"></i>: +852 1234 5678<br></br>\n                            <i class=\"fa fa-fax\"></i>: +852 8765 4321<br></br>\n                            <i class=\"fa fa-envelope\"></i>:\n                            <a href=\"mailto:jannat.liza089@gmail.com\" className=\"text-white\">hello@gmail.com</a>\n                        </address>\n\n                    </Col>\n                    <Col><i class=\"fab fa-facebook-square ct2\"></i>\n                        <i class=\"fab fa-twitter-square ml-2 ct2\"></i>\n                        <i class=\"fab fa-google-plus ml-2 ct2\"></i>\n                        <i class=\"fab fa-instagram-square ml-2 ct2\"></i>\n                        <i class=\"fab fa-youtube ml-2 ct2\"></i>\n                        <i class=\"fab fa-linkedin ml-2 ct2\"></i>\n                        <i class=\"fas fa-envelope ml-2 ct2\"></i>\n                    </Col>\n                    \n                </Row>\n                <Row className=\"bg-dark text-white\">\n                    <Col className=\"text-center py-3\">Copyright &copy;hello</Col>\n                </Row>\n     \n        </footer>\n    )\n}\n\nexport default Footer\n","/home/aziz/Desktop/pppppppp/frontend/src/components/Header.js",["223","224","225"],"import { React, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown, Image } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\nimport './style.css';\n\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n   \n\n\n\n\n    return (\n        <div>\n              <Nav defaultActiveKey=\"/home\" as=\"ul\" className=\"bg-dark\">\n      <Nav.Item as=\"li\">\n        <Nav.Link href=\"/home\" className=\"text-white\">Active</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link eventKey=\"link-1\" className=\"text-white\">Travel</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link eventKey=\"link-2\" className=\"text-white\" >Business</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link eventKey=\"link-1\" className=\"text-white\">Climate</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link eventKey=\"link-2\" className=\"text-white\" >Movie</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link eventKey=\"link-1\" className=\"text-white\">Travel</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link eventKey=\"link-2\" className=\"text-white\" >Business</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link eventKey=\"link-1\" className=\"text-white\">Climate</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link eventKey=\"link-2\" className=\"text-white\" >Movie</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link eventKey=\"link-1\" className=\"text-white\">Travel</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link eventKey=\"link-2\" className=\"text-white\" >Business</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link eventKey=\"link-1\" className=\"text-white\">Climate</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link eventKey=\"link-2\" className=\"text-white\" >Movie</Nav.Link>\n      </Nav.Item>\n    </Nav>\n    <hr></hr>\n            <Navbar className=\"navbar-light bg-light pt-0 pb-0 shadow\" expand=\"lg\"  collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n\n                        <Navbar.Brand className=\"mr-0 mr-md-4\">\n\n                            <div>\n                                <div className=\"text-center \" > \n                                \n                                {/* <img src=\"https://mpng.subpng.com/20180512/rte/kisspng-beauty-parlour-cosmetics-make-up-artist-royalty-fr-5af6a1f05d3e73.6847260815261127523819.jpg\" heigth=\"50\" width=\"50\"></img> */}\n\n                                <i class=\"fas fa-laptop-house\"></i></div>\n                                <div className=\"text-center\">\n\n\n                                    <span class=\"text-info \"> <b>B</b></span>\n                                    <span className=\"text-danger\">B</span>\n                                    <span className=\"text-success\">C</span>\n                              \n                                    <span class=\"text-info \">n</span>\n                                    <span className=\"text-danger\">e</span>\n                                    <span className=\"text-success\">w</span>\n                                    <span className=\"text-warning\">s</span> \n                                    \n                                    \n                                   \n                                </div>\n                            </div>\n\n\n\n\n\n                        </Navbar.Brand>\n                        \n                    </LinkContainer>\n                     \n                    <LinkContainer to='/cart' className=\"text-white active mr-0 mr-md-4\">\n                        <Nav.Link>\n                            <i className=\"fas fa-shopping-cart ct\"></i> cart <span class=\"badge badge-info ct3\">{cartItems.length > 0 ? (cartItems.reduce((acc, item) => acc + item.qty, 0)) : null}</span></Nav.Link>\n                    </LinkContainer>\n\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n                        <Nav className=\"ml-auto\">\n\n\n                            {userInfo && userInfo.firstName ? (\n                                <>\n                                    <Image src={`http://localhost:4000/${userInfo.profile_pic}`} width={40}\n                                        height={40} rounded />\n                                    <NavDropdown title={userInfo.firstName} id='username' className=\"active\">\n                                        <LinkContainer to='/profile'>\n                                            <NavDropdown.Item>Profile</NavDropdown.Item>\n                                        </LinkContainer>\n\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                    </NavDropdown>\n                                </>\n\n                            ) : (<>\n\n                                <LinkContainer to='/register2'>\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Register An Account </Nav.Link>\n                                </LinkContainer>\n                                <LinkContainer to='/login'>\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                </LinkContainer>\n                            </>\n                            )}\n\n\n                            {userInfo && userInfo.isAdmin ? (\n                                <>\n                                    <LinkContainer to='/dashboard'>\n                                        <Nav.Link>Dashboard</Nav.Link>\n                                    </LinkContainer>\n                                </>\n\n                            ) : null}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            </div>\n    )\n}\n\nexport default Header\n","/home/aziz/Desktop/pppppppp/frontend/src/screens/HomeScreen.js",["226","227","228","229","230"],"/home/aziz/Desktop/pppppppp/frontend/src/screens/UserListScreen.js",["231","232","233"],"import {React as useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\nimport AdminSideBar from '../admin_components/AdminSideBar'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users Screen</h1>\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar/>\n\n                </Col>\n                <Col md={9}>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.firstName}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`} disabled={userInfo._id == user._id ? true : false}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            {/* <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button> */}\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n                    </Col>\n                    </Row>\n        </div>\n    )\n}\n\nexport default UserListScreen\n","/home/aziz/Desktop/pppppppp/frontend/src/screens/UserEditScreen.js",["234"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Image, Col, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetailsAdmin, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\nimport axios from 'axios'\n\n\n\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [firstName, setFirstName] = React.useState('');\n    const [lastName, setLastName] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [profile_pic, setProfile_pic] = React.useState('');\n    const [isAdmin, setIsAdmin] = React.useState(false);\n    const [verified, setVerified] = React.useState(false);\n    const[err, setErr] = useState('');\n    const[message, setMessage] = useState('');\n    const baseURL = \"http://localhost:4000/api/user/DPchangeByAdmin\"\n\n    const dispatch = useDispatch()\n\n    const userDetailsAdmin = useSelector(state => state.userDetailsAdmin)\n    const { error, loading, user } = userDetailsAdmin\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n\n    const handleVerified = (e) =>{\n        if(verified) setVerified(false)\n        else setVerified(true);\n    }\n\n    const handleAdmin = (e) =>{\n        if(isAdmin) setIsAdmin(false);\n        else setIsAdmin(true);\n    }\n\n    const handleFile = async (e) => {\n        const formData = new FormData();\n        const admin = JSON.parse(localStorage.getItem('userInfo'));\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${admin.token}`\n            }\n        }\n        formData.append('profile_pic', e.target.files[0])\n        formData.append('userId', userId);\n        try {\n            await axios.post(baseURL, formData, config).then(res => {\n                setMessage(res.data.message);\n                window.location.reload();\n            })\n        }\n        catch (error) {\n            setErr(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n\n\n    }\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            window.location.reload();\n        } else {\n            if (!user.firstName || user._id !== userId) {\n                dispatch(getUserDetailsAdmin(userId))\n            } else {\n                setFirstName(user.firstName);\n                setLastName(user.lastName);\n                setEmail(user.email)\n                setProfile_pic(user.profile_pic);\n                setVerified(user.verified);\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [dispatch, user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ userId: user._id, firstName, lastName, email, isAdmin, verified }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n\n\n            <h1>Edit User</h1>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                : <>\n                    <Row>\n                        <Col md={4}>\n                        {message && <Message variant='success'>{message}</Message>}\n                        {err && <Message variant='danger'>{err}</Message>}\n                        {error && <Message variant='danger'>{error}</Message>}\n                            <Image src={`http://localhost:4000/${profile_pic}`} width={200}\n                                height={200} rounded />\n\n                                 <Form.Group controlId='profile pic'>\n                        <Form.Label>profile photo</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='file'\n                            onChange={handleFile}\n                           \n                        >\n                        </Form.Control>\n                    </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form onSubmit={submitHandler}>\n\n                                <Form.Group controlId='name'>\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control\n\n                                        type='first name'\n                                        placeholder='Enter last name'\n                                        value={firstName}\n                                        onChange={(e) => setFirstName(e.target.value)}\n                                        disabled\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='last name'>\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control\n\n                                        type='name'\n                                        placeholder='Enter last name'\n                                        value={lastName}\n                                        onChange={(e) => setLastName(e.target.value)}\n                                        disabled\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='email'>\n                                    <Form.Label>Email Address</Form.Label>\n                                    <Form.Control\n                                        type='email'\n                                        placeholder='Enter Email'\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                        disabled\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='verified'>\n                                    <Form.Check\n                                        type='checkbox'\n                                        label='Is verified'\n                                        checked={verified}\n                                        onChange={handleVerified}\n                                    >\n                                    </Form.Check>\n                                </Form.Group>\n\n                                <Form.Group controlId='isadmin'>\n                                    <Form.Check\n                                        type='checkbox'\n                                        label='Is Admin'\n                                        checked={isAdmin}\n                                        onChange={handleAdmin}\n                                    >\n                                    </Form.Check>\n                                </Form.Group>\n\n                                <Button type='submit' variant='primary'>\n                                    Update\n                                </Button>\n\n                            </Form>\n                        </Col>\n                    </Row>\n\n                    </>}\n\n\n\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","/home/aziz/Desktop/pppppppp/frontend/src/screens/DashboardScreen.js",["235","236","237","238","239","240","241"],"import {React, useState, useEffect} from 'react';\nimport {Row, Col, Card} from 'react-bootstrap';\nimport AdminSideBar from '../admin_components/AdminSideBar';\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios';\n\nconst baseURL = \"http://localhost:4000/api/product/dashboard\";\n\n\n\n\n\n\nconst DashboardScreen = ({history}) =>{\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n    const [newCustomers, setNewCustomers] = useState(0);\n    const [pendingOrders, setPendingOrders] = useState(0);\n    const [revenue, setRevenue] = useState(0);\n    const [error, setError] = useState(false);\n    const [profit, setProfit] = useState(null);\n\n    useEffect(() => {\n\n        if (!userInfo) {\n                history.push('/login')\n        }\n        else{\n            if(!userInfo.isAdmin)\n            {\n                history.push('/')\n            }\n            axios.get(baseURL).then(response=>{\n                setNewCustomers(response.data.recent_users);\n                setPendingOrders(response.data.pending_orders);\n            })\n        }\n\n    }, [history, userInfo])\n\n    const data = profit;\n \n\n\n   \n\n\n    return(\n        <div>\n            <h3>Dashboard Screen</h3>\n            <Row >\n                <Col md={3}>\n                    <AdminSideBar/>\n                </Col>\n                <Col md={4}>\n                    <Card\n                        bg=\"info\"\n                        className=\"mb-2 text-white text-center\"\n                    >\n                        <Card.Header className=\"nav-text\"><i class=\"fas fa-shopping-cart\"></i> Pending Orders </Card.Header>\n                        <Card.Body>\n                            <Card.Title>{pendingOrders} </Card.Title>\n                \n                        </Card.Body>\n                    </Card>\n                    <hr></hr>\n               \n                </Col>\n                <Col md={4}>\n                    <Card\n                        bg=\"dark\"\n                        className=\"mb-2 text-white text-center\"\n                    >\n                        <Card.Header className=\"nav-text\"><i class=\"fas fa-users\"></i> Users</Card.Header>\n                        <Card.Body>\n                            <Card.Title>{newCustomers && newCustomers} </Card.Title>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n              \n            </Row>\n        </div>\n    )\n}\n\nexport default DashboardScreen;","/home/aziz/Desktop/pppppppp/frontend/src/screens/auth/LoginScreen.js",["242"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport FormContainer from '../../components/FormContainer'\nimport { login } from '../../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n\n        <Row >\n            <Col md={3}>\n            </Col>\n            <Col>\n                <div className=\"card\">\n                <FormContainer >\n                    <h1>Sign In</h1>\n                    {error && <Message variant='danger'>{error}</Message>}\n                    {loading && <Loader />}\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                size=\"sm\"\n                                type='email'\n                                placeholder='Enter Email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                size=\"sm\"\n                                type='password'\n                                placeholder='Enter Password'\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button size=\"sm\" type='submit' variant='primary' className=\"btn-block\">\n                            Sign In\n                        </Button>\n                    </Form>\n\n                    <Row className='py-3'>\n                        <Col>\n                            New Customer? <Link\n                                to={redirect ? `/register2?redirect=${redirect}` : '/register2'}>\n                                Register\n                            </Link>\n                            \n                        </Col>\n                        <Col>\n                            Recover your account <Link\n                                to={redirect ? `/reset_password?redirect=${redirect}` : '/reset_password'}>\n                                reset password\n                            </Link>\n\n                        </Col>\n                    </Row>\n\n                </FormContainer>\n                </div>\n\n            </Col>\n            <Col md={3}>\n            </Col>\n        </Row>\n        \n      \n    )\n}\n\nexport default LoginScreen\n","/home/aziz/Desktop/pppppppp/frontend/src/screens/HomeCategoryScree.js",["243","244","245","246","247"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, Col, Row, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport { Link } from 'react-router-dom';\nimport Loaders from '../components/Loader';\n\nconst HomeCategoryScreen = ({ match }) => {\n    const id = match.params.id;\n    const [products, setProducts] = useState('');\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [loading, setLoadding] = useState(false);\n\n\n    var total = products && products.review && products.review.length > 0 ? products.review.reduce((accum, item) => accum + item.rating, 0) : 0;\n\n    // State with list of all checked item\n   \n    const [checkList, setChekList] = useState([]);\n    const handleCheck = (event) => {\n        var updatedList = [...checked];\n        if (event.target.checked) {\n            updatedList = [...checked, event.target.value];\n        } else {\n            updatedList.splice(checked.indexOf(event.target.value), 1);\n        }\n        setChecked(updatedList);\n    };\n    const [checked, setChecked] = useState([]);\n    const baseURL = `http://localhost:4000/api/category/getFilterCategories/${id}/data?brand=${checked}`;\n\n\n  \n\n   \n\n    // Generate string of checked items\n    const checkedItems = checked.length\n        ? checked.reduce((total, item) => {\n            return total + \", \" + item;\n        })\n        : \"\";\n\n    // Return classes based on whether item is checked\n    var isChecked = (item) =>\n        checked.includes(item) ? \"checked-item\" : \"not-checked-item\";\n\n\n    useEffect(async () => {\n    \n        try {\n            setLoadding(true);\n            await axios.get(baseURL).then(res => {\n                setProducts(res.data.products);\n                setError('');\n                setChekList(res.data.brands);\n                // setSuccess(res.data.message);\n            })\n            setLoadding(false);\n        }\n\n        catch (error) {\n            setSuccess('');\n            setLoadding(false);\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n        \n    }, [id, checked])\n\n\n    return (\n        <>\n            <Row>\n                <Col md={2} className=\"mr-1\">\n\n                    <div className=\"app mt-2\">\n                        <div className=\"checkList\">\n                            <div className=\"title\">Brand</div>\n                            <div className=\"list-container\">\n                                {checkList && checkList.length > 0 && checkList.map((item, index) => (\n                                    <div key={index}>\n                                        <input value={item} type=\"checkbox\" onChange={handleCheck} />\n                                        <span className={isChecked(item)}>{item}</span>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n\n                        <div>\n                            {`brand checked are: ${checkedItems}`}\n                        </div>\n                    </div>\n\n\n                </Col>\n                <Col md={9}>\n                    <Row>\n                        \n                        {   loading ? <Loaders/> :\n                            products && products.map((product, ind) => {\n                                return (\n                                    <>\n                                        <Col md={3} className=\"m-0 p-0\">\n                                            <div className=\"card my-2 p-2 text-center\">\n                                                <strong className=\"ct\">{product.review.length > 0 ? <span class=\"badge badge-info\"><i class=\"fas fa-star\"></i> TOP REVIEWED</span> : <br></br>}</strong>\n                                                <Link to={`/product/${product._id}`}>\n                                                    <Card.Img src={`http://localhost:4000/${product.image}`} className=\"img-fluid ps rounded mx-auto d-block\" />\n                                                </Link>\n\n                                                <Card.Body >\n                                                    <Link to={`/product/${product._id}`} >\n                                                        <Card.Title as=\"div\" >\n                                                            <strong >{product.name}</strong>\n                                                        </Card.Title>\n                                                    </Link>\n\n                                                    <Card.Text as=\"div\" >\n                                                        <div className=\"my-3\">\n                                                            <Rating value={total / product.review.length} text={`${product.review.length} reviews`} color={'#f8e825'} />\n                                                        </div>\n                                                    </Card.Text>\n\n                                                    <Card.Text as=\"h6\" >\n                                                        &#2547;{product.is_offer ? product.price - ((product.price * product.offer_percentage) / 100) : product.price}\n                                                        <br></br><span class=\"text-tl\">{product.is_offer ? '৳' + product.price : null}</span> {product.is_offer ? '-' + product.offer_percentage + '%' : null}\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </div>\n                                        </Col>\n                                    </>\n                                )\n\n                            })\n                        }\n                    </Row>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\n\nexport default HomeCategoryScreen;","/home/aziz/Desktop/pppppppp/frontend/src/screens/auth/ResetPassword.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/screens/CategoryScreen.js",["248","249","250","251","252","253"],"import React, { useEffect, useState } from 'react';\nimport { Row, Col, Table, Button, InputGroup, FormControl, Form, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport AdminSideBar from '../admin_components/AdminSideBar';\nimport Message from '../components/Message';\nimport Loaders from '../components/Loader';\n\n\n\n\nconst baseURLCreate = 'http://localhost:4000/api/category/createCategory';\nconst baseURLgetAllCategories = 'http://localhost:4000/api/category/getAllCategories';\n\nconst CategoryScreen = () => {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [error, setError] = useState();\n    const [success, setSuccess] = useState('');\n    const [categories, setCategories] = useState('');\n    const [category, setCategory] = useState('');\n    const [isUpdate, setIsUpdate] = useState(false);\n    const [catId, setCatId] = useState(null);\n    const [loading, setLoadding] = useState(false);\n    const admin = JSON.parse(localStorage.getItem('userInfo'));\n\n    const config = {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${admin.token}`\n        }\n    }\n\n    const handleCreate = async (e) => {\n        e.preventDefault()\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('description', description);\n        formData.append('image', image);\n\n\n        try {\n\n            await axios.post(baseURLCreate, formData, config).then(res => {\n                setCategories(res.data.categories);\n                setSuccess(res.data.message);\n                setError('');\n            })\n\n        }\n        catch (error) {\n\n            setSuccess('');\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n\n    }\n\n    const handlegetCategory = async (e, id) => {\n        e.preventDefault();\n        const baseURLgetCat = `http://localhost:4000/api/category/getCategory/${id}`;\n        try {\n            await axios.get(baseURLgetCat, config).then(res => {\n                setCategory(res.data.category);\n                setError('');\n                setSuccess(res.data.message);\n            })\n        }\n        catch (error) {\n            setSuccess('');\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n    }\n\n    const handleDelete = async (e, id) => {\n        e.preventDefault();\n        if (window.confirm('Are you sure you want to delete this category?')) {\n            const baseURLdelete = `http://localhost:4000/api/category/deleteCategory/${id}`;\n            try {\n                await axios.delete(baseURLdelete, config).then(res => {\n                    setCategories(res.data.categories);\n                    setError('');\n                    setSuccess(res.data.message);\n                })\n            }\n            catch (error) {\n                setSuccess('');\n                setError(error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : \"network error\");\n            }\n        }\n    }\n\n    const handleUpdate = async (e) => {\n        e.preventDefault();\n        const baseURLgetCat = `http://localhost:4000/api/category/updateCategory/${catId}`;\n        console.log(catId)\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('description', description);\n        formData.append('image', image);\n        if (!name || !description) {\n            alert(\"All fields must be filled\");\n            return;\n        }\n        try {\n            await axios.put(baseURLgetCat, formData, config).then(res => {\n                setCategory(res.data.updateCategory);\n                setError('');\n                setSuccess(res.data.message);\n            })\n        }\n        catch (error) {\n            setSuccess('');\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n\n    }\n\n    useEffect(async () => {\n        try {\n            setLoadding(true);\n            await axios.get(baseURLgetAllCategories, config).then(res => {\n                setCategories(res.data.categories);\n                setError('');\n                // setSuccess(res.data.message);\n            })\n            setLoadding(false);\n        }\n        catch (error) {\n            setSuccess('');\n            setLoadding(false);\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n        if (category) {\n            setName(category.name);\n            setDescription(category.description);\n            setImage(category.image);\n            setIsUpdate(true);\n            setCatId(category._id);\n        }\n\n    }, [category])\n\n\n    return (\n        <div>\n            <h3>Category screen</h3>\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar />\n                </Col>\n                <Col>\n                    {success && <Message variant='success'>{success}</Message>}\n                    {error && <Message variant='danger'>{error}</Message>}\n                    <form onSubmit={isUpdate == false ? handleCreate : handleUpdate}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter  name'\n                                value={name}\n                                onChange={(e) => { setName(e.target.value) }}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='description'>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n\n                                type='text'\n                                placeholder='Enter des'\n                                value={description}\n                                onChange={(e) => { setDescription(e.target.value) }}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='image'>\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control\n                                type='file'\n                                onChange={(e) => { setImage(e.target.files[0]) }}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n                        {\n                            isUpdate == false ?\n                                <>\n                                    <Button type=\"submit\" variant=\"info \" id=\"button-addon2\" size=\"md\">\n                                        Add\n                                    </Button>\n                                </>\n                                :\n                                <>\n                                    <Button type=\"submit\" variant=\"info\" id=\"button-addon2\" size=\"md\">\n                                        Update\n                                    </Button>\n                                </>\n                        }\n                    </form>\n\n                    <hr></hr>\n                    {loading && <Loaders />}\n                    <Table striped bordered hover size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Name</th>\n                                <th>image</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            {\n\n                                categories && categories.map((val, ind) => {\n                                    return (<>\n                                        <tr>\n                                            <td>{ind}</td>\n                                            <td>{val.name}</td>\n                                            <td>  <Image src={`http://localhost:4000/${val.image}`} width={40}\n                                                height={40} rounded /></td>\n                                            <td><Button onClick={(e) => { handlegetCategory(e, val._id) }} size=\"sm\" className=\"btn btn-warning\"><i class=\"fas fa-edit\"></i>\n                                            </Button> <Button onClick={(e) => { handleDelete(e, val._id) }} className=\"btn btn-danger\" size=\"sm\"><i class=\"fas fa-trash\"></i></Button></td>\n\n                                        </tr>\n                                    </>)\n                                })\n                            }\n\n                        </tbody>\n                    </Table>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default CategoryScreen;","/home/aziz/Desktop/pppppppp/frontend/src/screens/auth/ProfileScreen.js",["254","255","256","257","258"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table, Container, Image } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../../constants/userConstants'\nimport { listMyOrders } from '../../actions/orderActions'\nimport axios from 'axios'\n\nconst baseURL = \"http://localhost:4000/api/user/DPchange\";\n\nfunction ProfileScreen({ history }) {\n\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    \n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [profile_pic, setProfile_pic] = useState('');\n    const [err, setErr] = useState('');\n\n    const [message, setMessage] = useState('')\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success, wrong, msg } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n    const handleFile = (e) => {\n\n        const formData = new FormData();\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        formData.append('profile_pic', e.target.files[0])\n        axios.post(baseURL, formData, config).then((res) => {\n            const data = res.data.file_name;\n            // Get the existing data\n            var existing = localStorage.getItem('userInfo');\n\n            // If no existing data, create an array\n            // Otherwise, convert the localStorage string to an array\n            existing = existing ? JSON.parse(existing) : {};\n            // Add new data to localStorage Array\n            existing['profile_pic'] = data;\n            // Save back to localStorage\n            localStorage.setItem('userInfo', JSON.stringify(existing));\n            setProfile_pic(data);\n            window.location.reload();\n        }).catch(error => {\n            setErr(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        })\n\n    }\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n\n            if (!user || !user.firstName || success || userInfo._id !== user._id) {\n\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n\n            } else {\n\n                setFirstName(user.firstName);\n                setLastName(user.lastName);\n                setEmail(user.email);\n                setProfile_pic(user.profile_pic);\n            }\n        }\n\n    }, [dispatch, history, user, userInfo, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (!password) {\n            setMessage('did not give password')\n        } else {\n            dispatch(updateUserProfile({\n                'firstName': firstName,\n                'lastName': lastName,\n                'email': email,\n                'password': password,\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <div>\n            <Row>\n                <Col md={2}>\n\n                    <Image src={`http://localhost:4000/${profile_pic}`} width={140}\n                        height={140} rounded />\n\n                    <Form.Group controlId='profile pic'>\n                        <Form.Label>profile photo</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='file'\n                            onChange={handleFile}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                </Col>\n                <Col md={3}>\n                    <h2 >Profile</h2>\n\n                    {message && <Message variant='danger'>{message}</Message>}\n                    {msg && <Message variant='success'>{msg}</Message>}\n                    {error && <Message variant='danger'>{error}</Message>}\n                    {wrong && <Message variant='danger'>{wrong}</Message>}\n                    {loading && <Loader />}\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control\n                                required\n                                type='name'\n                                placeholder='Enter name'\n                                value={firstName}\n                                onChange={(e) => setFirstName(e.target.value)}\n                                size=\"sm\"\n                            >\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control\n                                required\n                                type='name'\n                                placeholder='Enter name'\n                                value={lastName}\n                                onChange={(e) => setLastName(e.target.value)}\n                                size=\"sm\"\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                required\n                                type='email'\n                                placeholder='Enter Email'\n                                value={email}\n                                disabled\n                                onChange={(e) => setEmail(e.target.value)}\n                                size=\"sm\"\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <span>You cant change password here. this field is just required for updating others field</span>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n\n                                type='password'\n                                placeholder='Enter Password'\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                size=\"sm\"\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n\n\n\n                        <Button type='submit' variant='primary' size=\"sm\">\n                            Update\n                        </Button>\n\n                    </Form>\n                </Col>\n\n                <Col md={7}>\n                    <h2 >My Recent Orders</h2>\n                    {loadingOrders ? (\n                        <Loader />\n                    ) : errorOrders ? (\n                        <Message variant='danger'>{errorOrders}</Message>\n                    ) : (\n                        <Table striped responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Date</th>\n                                    <th>Total</th>\n                                    <th>Paid</th>\n                                    <th>Delivered</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>৳{order.totalPrice}</td>\n                                        <td>{order.isPaid ? <i className='fas fa-check' style={{ color: 'green' }}></i> : (\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                        )}</td>\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button className='btn-sm'>Details</Button>\n                                            </LinkContainer>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default ProfileScreen","/home/aziz/Desktop/pppppppp/frontend/src/screens/auth/ConfirmPassword.js",["259","260","261"],"import axios from 'axios';\nimport { React, useState, useEffect } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport Message from '../../components/Message';\n\n\n\nconst ConfirmPassword = ({ match, history }) => {\n\n    const id = match.params.id;\n    const token = match.params.token;\n    const baseURL = `http://localhost:4000/api/user/resetPassword_verification/${id}/${token}`;\n    const baseURL2 = `http://localhost:4000/api/user/updatePassword/${id}/${token}`;\n    const [password, setPassword] = useState('');\n    const [password2, setPassword2] = useState('');\n    const [userInfo, setUser_info] = useState('');\n    const [isValid, setIsValid] = useState(false);\n    const [error, setError] = useState('');\n\n\n    if (userInfo) {\n        localStorage.setItem('userInfo', JSON.stringify(userInfo));\n        history.push('/')\n        window.location.reload();\n    }\n\n    const passwordHandle = async (e) => {\n        e.preventDefault()\n        try {\n            const data = {\n                password: password,\n                password2: password2,\n            }\n            await axios.put(baseURL2, data).then(res => {\n                setUser_info(res.data.userInfo)\n            })\n        }\n        catch (error) {\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n    }\n\n\n\n    useEffect(async () => {\n        try {\n            await axios.get(baseURL).then(res => {\n                setIsValid(true);\n            })\n        }\n        catch (error) {\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n    }, [id, token, userInfo])\n\n    return (\n        <div>\n\n            {\n                isValid == true ?\n                    <>\n                        <Row>\n                            <Col sm={4}>\n                            </Col>\n                            <Col sm={4}>\n                                <h5>Confirm your new password</h5>\n                                {error && <Message variant='danger'>{error}</Message>}\n                                <form onSubmit={passwordHandle}>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type='password'\n                                    placeholder='Enter password'\n                                    onChange={(e) => setPassword(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.Label>Confirm Password</Form.Label>\n                                <Form.Control\n                                    size=\"sm\"\n                                    type='password'\n                                    placeholder='Enter confirm password'\n                                    onChange={(e) => setPassword2(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Button type=\"submit\" size=\"sm\" className=\"btn-block\">Submit</Button>\n                                </form>\n\n                            </Col>\n                            <Col sm={4}>\n                            </Col>\n                        </Row>\n                    </>\n\n                    :\n                    <>\n                     {error && <Message variant='danger'>{error}</Message>}\n                    </>\n            }\n\n\n        </div>\n    )\n}\n\nexport default ConfirmPassword;","/home/aziz/Desktop/pppppppp/frontend/src/screens/auth/RegisterScreen2.js",["262","263","264","265","266","267","268","269"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport FormContainer from '../../components/FormContainer'\nimport { register } from '../../actions/userActions'\nimport axios from 'axios'\n\nconst baseURL = \"http://localhost:4000/api/user/signUp\";\n\nfunction RegisterScreen2({ location, history }) {\n\n    const [firstName, setFirst_name] = useState('')\n    const [lastName, setLast_name] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [password2, setPassword2] = useState('')\n    const [profile_pic, setProfile_pic] = useState('');\n    const [message, setMessage] = useState('')\n    const [isOk, setIsOk] = useState(false);\n    const [error, setError] = useState(null);\n    const [loading, setLoadding] = useState(false)\n    const [success, setSuccess] = useState(false);\n\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n\n    // useEffect(() => {\n    //     if (success) {\n    //         history.push('/otp_screen');\n    //     }\n    // }, [success]);\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != password2) {\n            setError('Passwords do not match')\n        } else {\n            //dispatch(register(name, email, password, mobile))\n            const formData = new FormData();\n            formData.append('firstName', firstName);\n            formData.append('lastName', lastName)\n            formData.append('email', email)\n            formData.append('password', password);\n            formData.append('password2', password2);\n            formData.append('profile_pic', profile_pic);\n\n            setLoadding(true)\n    \n                axios.post(baseURL, formData).then((response) => {\n                    setError('')\n                    setMessage(response.data.message);\n                    setSuccess(true);  \n                }).catch(error =>{\n                    setMessage('')\n                    setError(error.response && error.response.data.detail\n                        ? error.response.data.detail\n                        : \"network error\");\n                })\n            setLoadding(false)\n            \n        }\n       \n\n    }\n\n    const handleFile = (e) =>{\n        setProfile_pic(e.target.files[0]);\n    }\n\n    return (\n\n        <FormContainer>\n            <div className=\"card p-4\">\n                <h1>Register</h1>\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                {message &&  <Message variant='success'>{message}</Message>}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='f name'>\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='name'\n                            placeholder='Enter first name'\n                            value={firstName}\n                            onChange={(e) => setFirst_name(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='l name'>\n                        <Form.Label>last Name</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='name'\n                            placeholder='Enter last name'\n                            value={lastName}\n                            onChange={(e) => setLast_name(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={password2}\n                            onChange={(e) => setPassword2(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='profile pic'>\n                        <Form.Label>profile photo</Form.Label>\n                        <Form.Control\n                            required\n                            size=\"sm\"\n                            type='file'\n                            onChange={handleFile}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button size=\"sm\" type='submit' variant='primary' className=\"btn-block mt-4\">\n                        Register\n                    </Button>\n\n                </Form>\n\n                <Row className='py-3'>\n                    <Col>\n                        Have an Account? <Link\n                            to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                            Sign In\n                        </Link>\n                    </Col>\n                </Row>\n            </div>\n        </FormContainer >\n\n    )\n}\n\nexport default RegisterScreen2;\n","/home/aziz/Desktop/pppppppp/frontend/src/screens/auth/EmailVerifyScreen.js",["270","271","272","273","274","275"],"import { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport Message from \"../../components/Message\";\n\nconst EmailVerifyScreen = ({match, history}) =>{\n    const id = match.params.id;\n    const token = match.params.token;\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [userInfo, setUserInfo] = useState(null);\n    const[loading, setLoading] = useState(false);\n    const baseURL = `http://localhost:4000/api/user/SignUp_verification/${id}/${token}`;\n\n\n    if(userInfo)\n    {\n        localStorage.setItem('userInfo', JSON.stringify(userInfo));\n        history.push('/')\n    }\n\n    useEffect(async () => {\n        try {\n            await axios.get(baseURL).then(res => {\n                setUserInfo(res.data.userInfo)\n            })\n        }\n        catch (error) {\n            setError(error.response && error.response.data.detail\n                ? error.response.data.detail\n                : \"network error\");\n        }\n    }, [id, token, userInfo])\n\n\n\n    return(\n        <>\n       \n       {error && <Message variant='danger'>{error}</Message>}\n      \n        </>\n    )\n}\nexport default EmailVerifyScreen;;\n","/home/aziz/Desktop/pppppppp/frontend/src/components/SearchBox.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/components/Rating.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/components/Loader.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/components/FormContainer.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/components/Message.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/components/Paginate.js",["276"],"\nimport * as React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Pagination from '@mui/material/Pagination';\nexport default function Paginate({ pages, page, keyword = '', isAdmin = '' }) {\n    const history = useHistory();\n\n    const [cur, setCur] = React.useState(null);\n\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n    const handleChange = (event, value) => {\n        if (isAdmin) {\n            history.push(`/admin/productlist/?keyword=${keyword}&page=${value}`);\n        }\n        else {\n            history.push(`/?keyword=${keyword}&page=${value}`);\n        }\n        setCur(value);\n    }\n    return (\n        <>\n            {\n                pages ? <Pagination count={parseInt(pages)} page={parseInt(page)} color=\"secondary\" onChange={handleChange} /> : null\n            }\n        </>\n    );\n}\n","/home/aziz/Desktop/pppppppp/frontend/src/components/TopProducts.js",["277","278","279","280","281","282","283"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport {Container} from 'react-bootstrap';\nimport Loader from './Loader'\nimport Message from './Message'\n\nfunction TopProducts({products}) {\n\n    \n\n\n    return (<div className=\"bg-primary\">\n                <Carousel  autoPlay=\"true\" infiniteLoop=\"true\" useKeyboardArrows=\"true\"  interval=\"3000\" stopOnHover=\"true\" className=\"br\" >\n                    \n                    {products && products.map((product, ind)   => (\n                        <Link to={`/product/${product._id}`}>\n\n                        <div >\n                            \n                            <img src={`http://localhost:4000/${product.image}`} />\n                            <p className=\"legend\"> <h6 className=\"text-white\">Top product {ind + 1} : {product.name} <br></br> price &#x9F3;({product.price})  </h6> </p>\n                        \n                        </div>\n                        </Link>\n\n                    ))}\n                   \n        \n                </Carousel>\n            </div>\n\n    )\n}\n\nexport default TopProducts\n","/home/aziz/Desktop/pppppppp/frontend/src/components/Category.js",["284"],"import React from 'react'\nimport { Card, Row, Col } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\nconst Category = ({ categories }) => {\n    console.log(\"cat \", categories)\n    return (\n        <>  <h5 className=\"mt-4 mb-4 text-center\">categories</h5>\n        <Row className='p-0 bg-secondary  p-2 bg-white'>\n            {\n                categories && categories.map((val, ind) => {\n                    return (\n                        <>\n                            <Col md={2} className='p-0 m-0 cardd'>\n\n                                <div className=\"card text-center\">\n\n                                    <Link to={`/cat_home/${val._id}`}>\n                                        <Card.Img src={`http://localhost:4000/${val.image}`} style={{maxHeight: '80px', maxWidth: '80px', minHeight: '80px', minWidth: '80px'}} className=\"mt-1\"/>\n                                    </Link>\n\n                                    <Card.Body >\n                                        <Link to={`/cat_home/${val._id}`} >\n                                            <Card.Title as=\"div\" >\n                                                <strong >{val.name}</strong>\n                                            </Card.Title>\n                                        </Link>\n\n                                    </Card.Body>\n                                </div>\n\n                            </Col>\n                        </>\n                    )\n                })\n            }\n        </Row>\n        </>\n    )\n}\nexport default Category;","/home/aziz/Desktop/pppppppp/frontend/src/actions/userActions.js",["285"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_DETAILS_REQUEST_ADMIN,\n    USER_DETAILS_SUCCESS_ADMIN,\n    USER_DETAILS_FAIL_ADMIN,\n\n    \n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'http://localhost:4000/api/user/signIn',\n            { 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        const tkn = data.userInfo;\n        localStorage.setItem('userInfo', JSON.stringify(tkn))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\n\n\nexport const register = (otp, email) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'otp': otp, 'email': email },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/user/userProfile/${id}`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetailsAdmin = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST_ADMIN\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/user/userDetails/${id}`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS_ADMIN,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL_ADMIN,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/user/updateUser`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        const tkn = data.userInfo;\n        localStorage.setItem('userInfo', JSON.stringify(tkn))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/user`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/user/updateUserByAdmin`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/aziz/Desktop/pppppppp/frontend/src/actions/productActions.js",["286"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n    PRODUCT_OFFER_REQUEST,\n    PRODUCT_OFFER_SUCCESS,\n    PRODUCT_OFFER_FAIL,\n\n    PRODUCT_COUPON_REQUEST,\n    PRODUCT_COUPON_SUCCESS,\n    PRODUCT_COUPON_FAIL\n\n} from '../constants/productConstants';\n\nexport const listCoupons = () => async (dispatch) => {\n    try{\n        dispatch({type: PRODUCT_COUPON_REQUEST})\n\n        const { data } = await axios.get(`/api/products/coupons/`)\n\n        dispatch(\n            {\n                type: PRODUCT_COUPON_SUCCESS,\n                payload: data\n\n            }\n        )\n    }\n    catch(error)\n    {\n        dispatch({\n            type: PRODUCT_COUPON_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n\n    }\n}\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/product${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listOfferProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_OFFER_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/product/offerProduct`)\n\n        dispatch({\n            type: PRODUCT_OFFER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_OFFER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`http://localhost:4000/api/product/getProduct/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo ? userInfo.token : null}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `http://localhost:4000/api/product/deleteProduct/${id}`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo ? userInfo.token : null}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/product/createProduct`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product, id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo ?  userInfo.token : null}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `http://localhost:4000/api/product/updateProduct/${id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/product/${productId}/createReview`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/aziz/Desktop/pppppppp/frontend/src/actions/orderActions.js",["287","288","289"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `http://localhost:4000/api/order/createOrder`,\n            order,\n            config\n        )\n        console.log(\"data is he\", data);\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/order/orderDetails/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `http://localhost:4000/api/order/orderPay/${id}/pay`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/order/orderDeliver/${order._id}/deliver`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://localhost:4000/api/order/myOrders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get(\n            `http://localhost:4000/api/order/allOrders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/aziz/Desktop/pppppppp/frontend/src/actions/cartActions.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/constants/productConstants.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/constants/orderConstants.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/constants/userConstants.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/admin_components/AdminSideBar.js",["290","291"],"import React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Nav, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport {Link, NavLink} from 'react-router-dom';\nimport { logout } from '../actions/userActions'\n\n\n\nconst SideBar = (history) => {\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n\n    return (\n        <>\n\n            <Nav className=\"col-md-12 d-none d-md-block bg-dark sidebar p-3 \">\n                <div className=\"sidebar-sticky \"></div>\n                <Nav.Item>\n                    \n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 mt-2 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/dashboard\"\n                        exact\n                    >\n                        <i class=\"fas fa-tachometer-alt\"></i> Dashboard\n                    </NavLink>\n                </Nav.Item>\n                <hr></hr>\n                <Nav.Item>\n       \n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 mt-2 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/admin/userlist\"\n                        exact\n                    >\n                        <i class=\"fas fa-users\"></i> Users\n                    </NavLink>\n                </Nav.Item>\n                <hr></hr>\n                <Nav.Item>\n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/category\"\n                        exact\n                    >\n                        <i class=\"fab fa-bandcamp\"></i> Category\n                    </NavLink>\n                </Nav.Item>\n                <hr></hr>\n                <Nav.Item>\n                    <NavLink\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        to=\"/admin/articlelist\"\n                        exact\n                    >\n                        <i class=\"fab fa-product-hunt\"></i> Article\n                    </NavLink>\n                </Nav.Item>\n\n                <hr></hr>\n                    \n                <hr></hr>\n                <Nav.Item>\n                    <Link\n                        className=\"navbar-item h5 font-weight-bold ml-3 text-white\"\n                        activeClassName=\"is-active\"\n                        onClick={logoutHandler}\n                        to=\"/\"\n                        \n                    >\n                        <i class=\"fas fa-sign-out-alt\"></i> Logout\n                    </Link>\n                </Nav.Item>\n                \n                <div style={{marginBottom: \"1200px\"}}>\n\n                </div>\n            </Nav>\n\n        </>\n    );\n};\nconst AdminSideBar = withRouter(SideBar);\nexport default AdminSideBar;","/home/aziz/Desktop/pppppppp/frontend/src/constants/cartConstants.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/reducers/userReducers.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/reducers/cartReducers.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/reducers/productReducers.js",[],["292","293"],"/home/aziz/Desktop/pppppppp/frontend/src/reducers/contactReducer.js",["294","295","296"],"import {\n    CONTACT_LIST_REQUEST,\n    CONTACT_LIST_SUCCESS,\n    CONTACT_LIST_FAIL,\n\n    CONTACT_CREATE_REQUEST,\n    CONTACT_CREATE_SUCCESS,\n    CONTACT_CREATE_FAIL,\n\n\n} from '../constants/contactConstants';\n\n\nexport const contactCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CONTACT_CREATE_REQUEST:\n            return { loading: true }\n\n        case CONTACT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case CONTACT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}","/home/aziz/Desktop/pppppppp/frontend/src/reducers/orderReducers.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/constants/contactConstants.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/reducers/articleReducers.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/constants/articleConstants.js",[],"/home/aziz/Desktop/pppppppp/frontend/src/actions/articleAction.js",["297"],"/home/aziz/Desktop/pppppppp/frontend/src/screens/ArticleEditScreen.js",["298","299","300","301","302","303","304","305","306"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Image } from 'react-bootstrap'\nimport { Label, Input, FormText, FormGroup } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listArticleDetails, updateArticle } from '../actions/articleAction'\nimport { ARTICLE_UPDATE_RESET } from '../constants/articleConstants'\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\n\n\nfunction ArticleEditScreen({ match, history }) {\n\n    const articleId = match.params.id\n\n   const [category, setCategory] = useState('');\n    const [catId, setCatId] = useState(null);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [content, setContent] = useState('');\n    const [isPublished, setIs_published] = useState(null);\n    const [image, setImage] = useState(null);\n    const [id, setId] = useState(null);\n    const [author, setAuthor] = useState('');\n\n    const dispatch = useDispatch()\n\n    const articleDetails = useSelector(state => state.articleDetails)\n    const { error, loading, article, categories } = articleDetails\n\n    const articleUpdate = useSelector(state => state.articleUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = articleUpdate\n\n    const handleCategory = (e) =>{\n        setCatId(e.target.value);\n        const cat = categories.find(cat => cat._id === e.target.value);\n        setCategory(cat.name);\n      \n    }\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: ARTICLE_UPDATE_RESET })\n\n            history.push('/admin/articlelist')\n        } else {\n            const flag = article && article._id && article._id === articleId ? 'yes' : 'no';\n            console.log(typeof article._id, ' ', typeof articleId)\n            if (!article.title || flag === 'no') {\n                dispatch(listArticleDetails(articleId))\n            } else {\n                setTitle(article.title);\n                setDescription(article.description)\n                setContent(article.content);\n                setId(article._id);\n                setImage(article.image);\n                setCatId(article.category ? article.category._id : null)\n                setCategory(article.category ? article.category.name : null)\n                setAuthor(article.author && article.author);\n                setIs_published(article.isPublished && article.isPublished);\n            }\n        }\n\n\n\n    }, [dispatch, article, articleId, history, successUpdate, categories])\n\n    const submitHandler = (e) => {\n        const data = {\n            id: id,\n            category: category,\n            author: author,\n            title: title,\n            description: description,\n            content: content,\n            isPublished: isPublished,\n            \n        }\n        e.preventDefault()\n        dispatch(updateArticle(data, article._id))\n    }\n\n    const uploadFileHandler = async (e) => {\n\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('article_id', id)\n\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('http://localhost:4000/api/article/imageUpload', formData, config)\n            setImage(data.image)\n            console.log(\"data \", data);\n\n\n        } catch (error) {\n\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/articlelist'>\n                Go Back\n            </Link>\n            {/* <h1>Edit Article</h1> */}\n            <Row>\n                <Col md={3}>\n                    <Image src={`http://localhost:4000/${image}`} width={200}\n                        height={200} rounded />\n                    <Form.Group controlId='image'>\n                        <Form.File\n                            id='image-file'\n                            label='Choose File'\n                            onChange={uploadFileHandler}\n                        >\n\n                        </Form.File>\n                    </Form.Group>\n                </Col>\n                <Col md={8}>\n                    {loadingUpdate && <Loader />}\n                    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                    {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                        : (\n\n                            <Form onSubmit={submitHandler}>\n\n\n                                <FormGroup>\n                                <Label for=\"exampleSelect\">Current category : {category}</Label>\n                                <br></br>\n                                    <Label for=\"exampleSelect\">Select A category</Label>\n                                    <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={handleCategory}>\n                                    <option>none</option>\n                                        {\n                                            categories && categories.map((val, ind)=>{\n                                                return(\n                                                    <>\n                                                     <option value={val._id}>{val.name}</option>\n                                                    </>\n                                                )\n                                            })\n                                        }\n                                       \n                                    </Input>\n                                </FormGroup>\n\n                                <Form.Group controlId='author'>\n                                    <Form.Label>Author</Form.Label>\n                                    <Form.Control\n\n                                        type='name'\n                                        placeholder='Enter author'\n                                        value={author}\n                                        onChange={(e) => setAuthor(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='name'>\n                                    <Form.Label>title</Form.Label>\n                                    <Form.Control\n\n                                        type='name'\n                                        placeholder='Enter name'\n                                        value={title}\n                                        onChange={(e) => setTitle(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='description'>\n                                    <Form.Label>Description</Form.Label>\n                                    <Form.Control\n\n                                        type='name'\n                                        placeholder='Enter description'\n                                        value={description}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='content'>\n                                    <Form.Label>Content</Form.Label>\n                                    <Form.Control\n\n                                        type='text'\n                                        placeholder='Enter content'\n                                        value={content}\n                                        onChange={(e) => setContent(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='content'>\n                                    <Form.Label>isPublished</Form.Label>\n                                    <Form.Control\n\n                                        type='text'\n                                        placeholder='Enter content'\n                                        value={isPublished}\n                                        onChange={(e) => setIs_published(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                \n\n\n\n                                <Button type='submit' variant='primary'>\n                                    Update\n                                </Button>\n\n                            </Form>\n                        )}\n                </Col>\n\n            </Row>\n        </div>\n\n    )\n}\n\nexport default ArticleEditScreen","/home/aziz/Desktop/pppppppp/frontend/src/screens/ArticleListScreen.js",["307"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listArticles, deleteArticle, createArticle } from '../actions/articleAction'\nimport { ARTICLE_CREATE_RESET } from '../constants/articleConstants'\nimport AdminSideBar from '../admin_components/AdminSideBar'\n\nfunction ArticleListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const articleList = useSelector(state => state.articleList)\n    const { loading, error, articles, pages, page } = articleList\n\n    const articleDelete = useSelector(state => state.articleDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = articleDelete\n\n    const articleCreate = useSelector(state => state.articleCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, article: createdArticle } = articleCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: ARTICLE_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n\n        if (successCreate) {\n            history.push(`/admin/article/${createdArticle._id}/edit`)\n        } else {\n            dispatch(listArticles(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdArticle, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this article?')) {\n            dispatch(deleteArticle(id))\n        }\n    }\n\n    const createArticleHandler = () => {\n        dispatch(createArticle())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Articles Screen</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3 btn-sm' onClick={createArticleHandler}>\n                        <i className='fas fa-plus'></i> Create Article\n                    </Button>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={3}>\n                    <AdminSideBar/>\n                </Col>\n                <Col md={9}>\n               \n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Title</th>\n                                        <th>Description</th>\n                                        <th>CATEGORY</th>\n                                \n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {articles.map(article => (\n                                        <tr key={article._id}>\n                                            <td>{article._id}</td>\n                                            <td>{article.title}</td>\n                                            <td>{article.description}</td>\n                                            <td>{article.category && article.category.name}</td>\n                                            <td>{article.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/article/${article._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(article._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n                     </Col>\n                     </Row>\n        </div>\n    )\n}\n\nexport default ArticleListScreen","/home/aziz/Desktop/pppppppp/frontend/src/screens/ArticleScreen.js",["308","309","310","311","312","313","314","315","316","317","318","319","320"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Modal } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listArticleDetails, createArticleReview } from '../actions/articleAction';\nimport { ARTICLE_CREATE_REVIEW_RESET } from '../constants/articleConstants'\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { useSpeechSynthesis } from 'react-speech-kit';\n\n\n\nconst baseURL = \"http://127.0.0.1:8000/api/articles/\";\n\nfunction ArticleScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n    const [show, setShow] = useState(false);\n    const [date, setDate] = useState(null)\n    // const [predictPrice, setPredict_price] = useState(null);\n\n    // const handleClose = () => setShow(false);\n    // const handleShow = () => setShow(true);\n\n\n    const dispatch = useDispatch()\n    const { speak } = useSpeechSynthesis();\n\n    const articleDetails = useSelector(state => state.articleDetails)\n    const { loading, error, article, reviews } = articleDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const articleReviewCreate = useSelector(state => state.articleReviewCreate)\n    const {\n        loading: loadingArticleReview,\n        error: errorArticleReview,\n        success: successArticleReview,\n\n\n\n    } = articleReviewCreate\n\n    const article_id = article ? article._id : null;\n    var total = article && article.review && article.review.length > 0 ? article.review.reduce((accum, item) => accum + item.rating, 0) : 0;\n\n    useEffect(() => {\n        if (successArticleReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: ARTICLE_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listArticleDetails(match.params.id))\n\n    }, [dispatch, match, successArticleReview, reviews])\n\n    const addToCartHandler = () => {\n        console.log(\"article Ids\", match.params.id)\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createArticleReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n    console.log(\"Article \", article);\n    console.log(\"proD \", article);\n    return (\n        <div>\n\n\n\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={8}>\n\n\n                                    <Image style={{ maxHeight: '400px' }} src={`http://localhost:4000/${article.image}`} alt={article.name} fluid rounded />\n\n                                    <Card className=\"p-2 mt-4 border border-white\">\n                                        <div>Description: {ReactHtmlParser(article.description)}</div>\n                                    </Card>\n                                    <button onClick={() => speak({ text: article.description })}>Speak</button>\n                                    <diV className=\"mt-5 mb-5\">\n\n                                    </diV>\n\n                                    <diV className=\"mt-5 mb-5\">\n\n                                    </diV>\n                                </Col>\n\n\n\n\n\n\n                                <Col md={4}>\n                                    <h4>Related news</h4>\n                                    <Card className='p-2'>\n                                        <Row>\n                                            <Col md={8}>\n                                                <p>In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a d</p>\n                                            </Col>\n                                            <Col md={4}>\n                                                <Link to={`/article/${article._id}`}>\n                                                    <Card.Img src={`http://localhost:4000/${article.image}`} className=\"img-fluid ps rounded mx-auto d-block\" />\n                                                </Link>\n                                            </Col>\n                                        </Row>\n                                    </Card>\n\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    \n\n                                    <Card className=\"p-2 border border-white\">\n                                        <h4>Reviews</h4>\n                                        {reviews && reviews.length === 0 && <Message variant='info' size=\"sm\">No Reviews</Message>}\n\n                                        <ListGroup variant='flush'>\n                                            {reviews && reviews.map((review) => (\n                                                <ListGroup.Item key={review._id}>\n                                                    <strong>{review.user.firstName}</strong>\n                                                    <Rating value={review.rating} color='#f8e825' />\n                                                    <p>{review.createdAt.substring(0, 10)}</p>\n                                                    <p>{review.comment}</p>\n                                                </ListGroup.Item>\n                                            ))}\n\n                                            <ListGroup.Item>\n                                                <h4>Write a review</h4>\n\n                                                {loadingArticleReview && <Loader />}\n                                                {successArticleReview && <Message variant='success'>Review Submitted</Message>}\n                                                {errorArticleReview && <Message variant='danger'>{errorArticleReview}</Message>}\n\n                                                {userInfo ? (\n                                                    <Form onSubmit={submitHandler}>\n                                                        <Form.Group controlId='rating'>\n                                                            <Form.Label>Rating</Form.Label>\n                                                            <Form.Control\n                                                                as='select'\n                                                                value={rating}\n                                                                onChange={(e) => setRating(e.target.value)}\n                                                                size=\"sm\"\n                                                            >\n                                                                <option value=''>Select...</option>\n                                                                <option value='1'>1 - Poor</option>\n                                                                <option value='2'>2 - Fair</option>\n                                                                <option value='3'>3 - Good</option>\n                                                                <option value='4'>4 - Very Good</option>\n                                                                <option value='5'>5 - Excellent</option>\n                                                            </Form.Control>\n                                                        </Form.Group>\n\n                                                        <Form.Group controlId='comment'>\n                                                            <Form.Label>Review</Form.Label>\n                                                            <Form.Control\n                                                                as='textarea'\n                                                                row='5'\n                                                                value={comment}\n                                                                onChange={(e) => setComment(e.target.value)}\n                                                                size=\"sm\"\n                                                            ></Form.Control>\n                                                        </Form.Group>\n\n                                                        <Button\n                                                            disabled={loadingArticleReview}\n                                                            type='submit'\n                                                            variant='primary'\n                                                            size=\"sm\"\n                                                            className='btn btn-success'\n                                                        >\n                                                            Submit\n                                                        </Button>\n\n                                                        {/* <Button \n                                                      variant='info' size='sm'> add\n                                                    </Button> */}\n\n                                                    </Form>\n                                                ) : (\n                                                    <Message size=\"sm\" variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                    <Link to='/' className='btn btn-primary my-3  btn-sm'>Go Back</Link>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ArticleScreen\n","/home/aziz/Desktop/pppppppp/frontend/src/components/Article.js",[],{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":2,"column":39,"nodeType":"327","messageId":"328","endLine":2,"endColumn":45},{"ruleId":"325","severity":1,"message":"329","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":19},{"ruleId":"325","severity":1,"message":"330","line":1,"column":17,"nodeType":"327","messageId":"328","endLine":1,"endColumn":26},{"ruleId":"325","severity":1,"message":"331","line":1,"column":28,"nodeType":"327","messageId":"328","endLine":1,"endColumn":36},{"ruleId":"325","severity":1,"message":"332","line":3,"column":34,"nodeType":"327","messageId":"328","endLine":3,"endColumn":37},{"ruleId":"325","severity":1,"message":"331","line":1,"column":17,"nodeType":"327","messageId":"328","endLine":1,"endColumn":25},{"ruleId":"325","severity":1,"message":"329","line":3,"column":20,"nodeType":"327","messageId":"328","endLine":3,"endColumn":29},{"ruleId":"325","severity":1,"message":"333","line":3,"column":31,"nodeType":"327","messageId":"328","endLine":3,"endColumn":35},{"ruleId":"325","severity":1,"message":"334","line":3,"column":37,"nodeType":"327","messageId":"328","endLine":3,"endColumn":46},{"ruleId":"325","severity":1,"message":"335","line":9,"column":8,"nodeType":"327","messageId":"328","endLine":9,"endColumn":16},{"ruleId":"325","severity":1,"message":"331","line":1,"column":18,"nodeType":"327","messageId":"328","endLine":1,"endColumn":26},{"ruleId":"325","severity":1,"message":"336","line":34,"column":11,"nodeType":"327","messageId":"328","endLine":34,"endColumn":24},{"ruleId":"337","severity":1,"message":"338","line":79,"column":119,"nodeType":"339","messageId":"340","endLine":79,"endColumn":121},{"ruleId":"325","severity":1,"message":"341","line":7,"column":8,"nodeType":"327","messageId":"328","endLine":7,"endColumn":21},{"ruleId":"325","severity":1,"message":"342","line":4,"column":10,"nodeType":"327","messageId":"328","endLine":4,"endColumn":21},{"ruleId":"325","severity":1,"message":"343","line":20,"column":12,"nodeType":"327","messageId":"328","endLine":20,"endColumn":19},{"ruleId":"325","severity":1,"message":"344","line":20,"column":21,"nodeType":"327","messageId":"328","endLine":20,"endColumn":31},{"ruleId":"325","severity":1,"message":"345","line":21,"column":12,"nodeType":"327","messageId":"328","endLine":21,"endColumn":17},{"ruleId":"325","severity":1,"message":"346","line":21,"column":19,"nodeType":"327","messageId":"328","endLine":21,"endColumn":27},{"ruleId":"325","severity":1,"message":"347","line":22,"column":20,"nodeType":"327","messageId":"328","endLine":22,"endColumn":29},{"ruleId":"325","severity":1,"message":"348","line":42,"column":11,"nodeType":"327","messageId":"328","endLine":42,"endColumn":15},{"ruleId":"325","severity":1,"message":"349","line":3,"column":34,"nodeType":"327","messageId":"328","endLine":3,"endColumn":38},{"ruleId":"325","severity":1,"message":"333","line":3,"column":26,"nodeType":"327","messageId":"328","endLine":3,"endColumn":30},{"ruleId":"325","severity":1,"message":"345","line":11,"column":12,"nodeType":"327","messageId":"328","endLine":11,"endColumn":17},{"ruleId":"325","severity":1,"message":"350","line":12,"column":12,"nodeType":"327","messageId":"328","endLine":12,"endColumn":19},{"ruleId":"351","severity":1,"message":"352","line":50,"column":15,"nodeType":"353","endLine":71,"endColumn":6},{"ruleId":"351","severity":1,"message":"354","line":71,"column":8,"nodeType":"355","endLine":71,"endColumn":21,"suggestions":"356"},{"ruleId":"325","severity":1,"message":"357","line":2,"column":35,"nodeType":"327","messageId":"328","endLine":2,"endColumn":45},{"ruleId":"325","severity":1,"message":"358","line":2,"column":47,"nodeType":"327","messageId":"328","endLine":2,"endColumn":58},{"ruleId":"351","severity":1,"message":"352","line":127,"column":15,"nodeType":"353","endLine":152,"endColumn":6},{"ruleId":"351","severity":1,"message":"359","line":152,"column":8,"nodeType":"355","endLine":152,"endColumn":18,"suggestions":"360"},{"ruleId":"337","severity":1,"message":"338","line":165,"column":46,"nodeType":"339","messageId":"340","endLine":165,"endColumn":48},{"ruleId":"337","severity":1,"message":"338","line":196,"column":38,"nodeType":"339","messageId":"340","endLine":196,"endColumn":40},{"ruleId":"325","severity":1,"message":"361","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":14},{"ruleId":"325","severity":1,"message":"329","line":3,"column":41,"nodeType":"327","messageId":"328","endLine":3,"endColumn":50},{"ruleId":"325","severity":1,"message":"362","line":22,"column":12,"nodeType":"327","messageId":"328","endLine":22,"endColumn":27},{"ruleId":"325","severity":1,"message":"363","line":22,"column":29,"nodeType":"327","messageId":"328","endLine":22,"endColumn":47},{"ruleId":"325","severity":1,"message":"364","line":24,"column":12,"nodeType":"327","messageId":"328","endLine":24,"endColumn":15},{"ruleId":"351","severity":1,"message":"352","line":47,"column":15,"nodeType":"353","endLine":58,"endColumn":6},{"ruleId":"351","severity":1,"message":"354","line":58,"column":8,"nodeType":"355","endLine":58,"endColumn":29,"suggestions":"365"},{"ruleId":"337","severity":1,"message":"338","line":64,"column":25,"nodeType":"339","messageId":"340","endLine":64,"endColumn":27},{"ruleId":"325","severity":1,"message":"330","line":1,"column":27,"nodeType":"327","messageId":"328","endLine":1,"endColumn":36},{"ruleId":"325","severity":1,"message":"366","line":4,"column":23,"nodeType":"327","messageId":"328","endLine":4,"endColumn":34},{"ruleId":"325","severity":1,"message":"367","line":8,"column":10,"nodeType":"327","messageId":"328","endLine":8,"endColumn":18},{"ruleId":"325","severity":1,"message":"368","line":22,"column":12,"nodeType":"327","messageId":"328","endLine":22,"endColumn":16},{"ruleId":"325","severity":1,"message":"369","line":22,"column":18,"nodeType":"327","messageId":"328","endLine":22,"endColumn":25},{"ruleId":"325","severity":1,"message":"350","line":25,"column":12,"nodeType":"327","messageId":"328","endLine":25,"endColumn":19},{"ruleId":"325","severity":1,"message":"370","line":28,"column":11,"nodeType":"327","messageId":"328","endLine":28,"endColumn":19},{"ruleId":"337","severity":1,"message":"371","line":42,"column":22,"nodeType":"339","messageId":"340","endLine":42,"endColumn":24},{"ruleId":"325","severity":1,"message":"350","line":9,"column":12,"nodeType":"327","messageId":"328","endLine":9,"endColumn":19},{"ruleId":"325","severity":1,"message":"372","line":9,"column":21,"nodeType":"327","messageId":"328","endLine":9,"endColumn":31},{"ruleId":"325","severity":1,"message":"373","line":11,"column":11,"nodeType":"327","messageId":"328","endLine":11,"endColumn":18},{"ruleId":"325","severity":1,"message":"374","line":11,"column":20,"nodeType":"327","messageId":"328","endLine":11,"endColumn":30},{"ruleId":"351","severity":1,"message":"352","line":21,"column":15,"nodeType":"353","endLine":32,"endColumn":6},{"ruleId":"351","severity":1,"message":"354","line":32,"column":8,"nodeType":"355","endLine":32,"endColumn":29,"suggestions":"375"},{"ruleId":"325","severity":1,"message":"376","line":8,"column":12,"nodeType":"327","messageId":"328","endLine":8,"endColumn":15},{"ruleId":"325","severity":1,"message":"330","line":1,"column":17,"nodeType":"327","messageId":"328","endLine":1,"endColumn":26},{"ruleId":"325","severity":1,"message":"342","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":21},{"ruleId":"325","severity":1,"message":"366","line":2,"column":23,"nodeType":"327","messageId":"328","endLine":2,"endColumn":34},{"ruleId":"325","severity":1,"message":"329","line":6,"column":9,"nodeType":"327","messageId":"328","endLine":6,"endColumn":18},{"ruleId":"325","severity":1,"message":"377","line":7,"column":8,"nodeType":"327","messageId":"328","endLine":7,"endColumn":14},{"ruleId":"325","severity":1,"message":"378","line":8,"column":8,"nodeType":"327","messageId":"328","endLine":8,"endColumn":15},{"ruleId":"379","severity":1,"message":"380","line":23,"column":29,"nodeType":"381","endLine":23,"endColumn":83},{"ruleId":"325","severity":1,"message":"382","line":3,"column":8,"nodeType":"327","messageId":"328","endLine":3,"endColumn":14},{"ruleId":"325","severity":1,"message":"383","line":21,"column":5,"nodeType":"327","messageId":"328","endLine":21,"endColumn":30},{"ruleId":"325","severity":1,"message":"348","line":171,"column":17,"nodeType":"327","messageId":"328","endLine":171,"endColumn":21},{"ruleId":"325","severity":1,"message":"384","line":14,"column":5,"nodeType":"327","messageId":"328","endLine":14,"endColumn":20},{"ruleId":"325","severity":1,"message":"385","line":19,"column":5,"nodeType":"327","messageId":"328","endLine":19,"endColumn":24},{"ruleId":"325","severity":1,"message":"386","line":28,"column":5,"nodeType":"327","messageId":"328","endLine":28,"endColumn":24},{"ruleId":"325","severity":1,"message":"366","line":2,"column":23,"nodeType":"327","messageId":"328","endLine":2,"endColumn":34},{"ruleId":"325","severity":1,"message":"387","line":3,"column":15,"nodeType":"327","messageId":"328","endLine":3,"endColumn":21},{"ruleId":"321","replacedBy":"388"},{"ruleId":"323","replacedBy":"389"},{"ruleId":"325","severity":1,"message":"390","line":2,"column":5,"nodeType":"327","messageId":"328","endLine":2,"endColumn":25},{"ruleId":"325","severity":1,"message":"391","line":3,"column":5,"nodeType":"327","messageId":"328","endLine":3,"endColumn":25},{"ruleId":"325","severity":1,"message":"392","line":4,"column":5,"nodeType":"327","messageId":"328","endLine":4,"endColumn":22},{"ruleId":"325","severity":1,"message":"348","line":171,"column":17,"nodeType":"327","messageId":"328","endLine":171,"endColumn":21},{"ruleId":"325","severity":1,"message":"393","line":5,"column":24,"nodeType":"327","messageId":"328","endLine":5,"endColumn":32},{"ruleId":"325","severity":1,"message":"341","line":9,"column":8,"nodeType":"327","messageId":"328","endLine":9,"endColumn":21},{"ruleId":"325","severity":1,"message":"394","line":12,"column":10,"nodeType":"327","messageId":"328","endLine":12,"endColumn":18},{"ruleId":"325","severity":1,"message":"395","line":13,"column":8,"nodeType":"327","messageId":"328","endLine":13,"endColumn":21},{"ruleId":"325","severity":1,"message":"396","line":14,"column":8,"nodeType":"327","messageId":"328","endLine":14,"endColumn":23},{"ruleId":"325","severity":1,"message":"397","line":14,"column":27,"nodeType":"327","messageId":"328","endLine":14,"endColumn":39},{"ruleId":"325","severity":1,"message":"398","line":14,"column":41,"nodeType":"327","messageId":"328","endLine":14,"endColumn":61},{"ruleId":"325","severity":1,"message":"399","line":14,"column":63,"nodeType":"327","messageId":"328","endLine":14,"endColumn":74},{"ruleId":"325","severity":1,"message":"400","line":23,"column":12,"nodeType":"327","messageId":"328","endLine":23,"endColumn":17},{"ruleId":"325","severity":1,"message":"331","line":1,"column":17,"nodeType":"327","messageId":"328","endLine":1,"endColumn":25},{"ruleId":"325","severity":1,"message":"401","line":5,"column":58,"nodeType":"327","messageId":"328","endLine":5,"endColumn":63},{"ruleId":"325","severity":1,"message":"397","line":11,"column":27,"nodeType":"327","messageId":"328","endLine":11,"endColumn":39},{"ruleId":"325","severity":1,"message":"398","line":11,"column":41,"nodeType":"327","messageId":"328","endLine":11,"endColumn":61},{"ruleId":"325","severity":1,"message":"399","line":11,"column":63,"nodeType":"327","messageId":"328","endLine":11,"endColumn":74},{"ruleId":"325","severity":1,"message":"402","line":16,"column":7,"nodeType":"327","messageId":"328","endLine":16,"endColumn":14},{"ruleId":"325","severity":1,"message":"403","line":19,"column":17,"nodeType":"327","messageId":"328","endLine":19,"endColumn":23},{"ruleId":"325","severity":1,"message":"404","line":22,"column":12,"nodeType":"327","messageId":"328","endLine":22,"endColumn":16},{"ruleId":"325","severity":1,"message":"405","line":22,"column":18,"nodeType":"327","messageId":"328","endLine":22,"endColumn":25},{"ruleId":"325","severity":1,"message":"406","line":23,"column":12,"nodeType":"327","messageId":"328","endLine":23,"endColumn":16},{"ruleId":"325","severity":1,"message":"407","line":23,"column":18,"nodeType":"327","messageId":"328","endLine":23,"endColumn":25},{"ruleId":"325","severity":1,"message":"408","line":49,"column":11,"nodeType":"327","messageId":"328","endLine":49,"endColumn":21},{"ruleId":"325","severity":1,"message":"409","line":50,"column":9,"nodeType":"327","messageId":"328","endLine":50,"endColumn":14},{"ruleId":"325","severity":1,"message":"410","line":63,"column":11,"nodeType":"327","messageId":"328","endLine":63,"endColumn":27},"no-native-reassign",["411"],"no-negated-in-lhs",["412"],"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'ListGroup' is defined but never used.","'Category' is defined but never used.","'deleteHandler' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormContainer' is defined but never used.","'useDispatch' is defined but never used.","'revenue' is assigned a value but never used.","'setRevenue' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'setProfit' is assigned a value but never used.","'data' is assigned a value but never used.","'Card' is defined but never used.","'success' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'baseURL'. Either include it or remove the dependency array.","ArrayExpression",["413"],"'InputGroup' is defined but never used.","'FormControl' is defined but never used.","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.",["414"],"'Link' is defined but never used.","'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'err' is assigned a value but never used.",["415"],"'useSelector' is defined but never used.","'register' is defined but never used.","'isOk' is assigned a value but never used.","'setIsOk' is assigned a value but never used.","'dispatch' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'setSuccess' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["416"],"'cur' is assigned a value but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Rating' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'Button' is defined but never used.",["411"],["412"],"'CONTACT_LIST_REQUEST' is defined but never used.","'CONTACT_LIST_SUCCESS' is defined but never used.","'CONTACT_LIST_FAIL' is defined but never used.","'FormText' is defined but never used.","'CKEditor' is defined but never used.","'ClassicEditor' is defined but never used.","'ReactHtmlParser' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","'catId' is assigned a value but never used.","'Modal' is defined but never used.","'baseURL' is assigned a value but never used.","'setQty' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'article_id' is assigned a value but never used.","'total' is assigned a value but never used.","'addToCartHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"421","fix":"423"},"Update the dependencies array to be: [id, checked, baseURL]",{"range":"424","text":"425"},"Update the dependencies array to be: [category, config]",{"range":"426","text":"427"},"Update the dependencies array to be: [baseURL, id, token, userInfo]",{"range":"428","text":"429"},{"range":"430","text":"429"},[2214,2227],"[id, checked, baseURL]",[5053,5063],"[category, config]",[1754,1775],"[baseURL, id, token, userInfo]",[1005,1026]]